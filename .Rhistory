wd = "C:/Modelo_intento999/"
utm = CRS("+proj=utm +zone=21 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs")
# Lectura de capas
subs1 = readShapePoly(paste0(wd,"Embalse01/Watershed/Shapes/subs1.shp"),
force_ring = F,
proj4string = utm)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = F)
library(maptools)
# Lectura de capas
subs1 = readShapePoly(paste0(wd,"Embalse01/Watershed/Shapes/subs1.shp"),
force_ring = F,
proj4string = utm)
library(maptools)
# sistema de referencia
# dec = CRS("+init=epsg:4326") sistema de referencia en WGS84 grados decimales
utm = CRS("+proj=utm +zone=21 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs")
# Lectura de capas
subs1 = readShapePoly(paste0(wd,"Embalse01/Watershed/Shapes/subs1.shp"),
force_ring = F,
proj4string = utm)
# limpia valores NA de la tabla de atributos
subs1 = subs1[!is.na(subs1$OutletID),]
riv1 = readShapeLines(paste0(wd,"Embalse01/Watershed/Shapes/riv1.shp"),
proj4string = utm)
hru = readShapePoly(paste0(wd,"Embalse01/Watershed/Shapes/hru2.shp"),
force_ring = F,
proj4string = utm)
as.data.frame(hru)
riv1
as.data.frame(riv1)
as.data.frame(subs1)
subs1
saveRDS(subs1,"C:/Users/Rafael/Documents/R_projects/TalaToolsSWAT/inst/extdata/GIS_20210419/sub.RDS")
saveRDS(riv1,"C:/Users/Rafael/Documents/R_projects/TalaToolsSWAT/inst/extdata/GIS_20210419/riv.RDS")
saveRDS(hru,"C:/Users/Rafael/Documents/R_projects/TalaToolsSWAT/inst/extdata/GIS_20210419/hru.RDS")
library(SWATplusR)
load_demo
?unzip
unzip(zipfile="C:/Users/Rafael/Documents/R_projects/TalaToolsSWAT/inst/extdata/TALA_20210419.zip",
exdir = "C:/myzip")
unzip(zipfile="C:/Users/Rafael/Documents/R_projects/TalaToolsSWAT/inst/extdata/TALA_20210419.zip",
exdir = "C:/myzip")
unzip(zipfile="C:/Users/Rafael/Documents/R_projects/TalaToolsSWAT/inst/extdata/TALA_20210419.zip",
exdir = "C:/myzip")
unzip(zipfile="C:/Users/Rafael/Documents/R_projects/TalaToolsSWAT/inst/extdata/TALA_20210419.zip",
exdir = "C:/myzip")
unzip(zipfile="C:/Users/Rafael/Documents/R_projects/TalaToolsSWAT/inst/extdata/TALA_20210419.zip",
exdir = "C:/myzip")
library(usethis)
use_r("installSWATmodel")
devtools::document()
use_package_doc()
use_tibble()
devtools::document()
devtools::install()
library(TalaToolsSWAT)
?TalaToolsSWAT
?installSWATmodel
installSWATmodel(model_dir = "C:/model",model_version = "TALA_20210419")
readLines(paste0(model_dir), "/plant.dat")
model_dir = "C:/model"
readLines(paste0(model_dir), "/plant.dat")
readLines(paste0(model_dir), "/plant.DAT")
readLines(paste0(model_dir), "/plant.DAT")
paste0(model_dir, "/plant.DAT")
readLines(paste0(model_dir, "/plant.DAT"))
mm = readLines(paste0(model_dir, "/plant.DAT"))
strsplit(mm, " ")
mm = strsplit(mm, " ")
mm[[736]]
mm[[736]] == "TUBG"
any(mm[[736]] == "TUBG")
crop = "ORAN"
any(mm[[736]] == crop)
lapply(mm, function(x){any(x==crop)})
crop
crop
any(mm[[736]] == crop)
mm[[736]]
crop = "TUBG"
mm[[736]]
any(mm[[736]] == crop)
lapply(mm, function(x){any(x==crop)})
unlist(lapply(mm, function(x){any(x==crop)}))
dim(mm)
length(mm)
(1:length(mm))[unlist(lapply(mm, function(x){any(x==crop)}))]
plant_data = readLines(paste0(model_dir, "/plant.DAT"))
model_dir = "C:/model"
plant_data = readLines(paste0(model_dir, "/plant.DAT"))
plant_list = strsplit(plant_data, " ")
(1:length(plant_list))[unlist(lapply(plant_list, function(x){any(x==crop)}))]
crop = "TUBG"
plant_line = (1:length(plant_list))[unlist(lapply(plant_list, function(x){any(x==crop)}))]
plant_line
crop = "ORAN"
plant_line = (1:length(plant_list))[unlist(lapply(plant_list, function(x){any(x==crop)}))]
plant_line
plant_data[plant_line]
plant_data[plant_line]
strsplit(plant_data[plant_line]," ")
strsplit(plant_data[plant_line]," ")[[1]]
strsplit(plant_data[plant_line]," ")[[1]][1]
strsplit(plant_data[plant_line],"\\s+")
strsplit(plant_data[plant_line],"\\s+")[[1]]
strsplit(plant_data[plant_line+1],"\\s+")[[1]]
strsplit(plant_data[plant_line+1],"\s+")[[1]]
strsplit(plant_data[plant_line+1],"s+")[[1]]
strsplit(plant_data[plant_line],"s+")[[1]]
strsplit(plant_data[plant_line],"/s+")[[1]]
strsplit(plant_data[plant_line],"//s+")[[1]]
strsplit(plant_data[plant_line],"\s+")[[1]]
strsplit(plant_data[plant_line],"\\s+")[[1]]
plant_data[plant_line]
strsplit(plant_data[plant_line],"\\t+")[[1]]
strsplit(plant_data[plant_line],"\\s+")[[1]]
is.null(strsplit(plant_data[plant_line],"\\s+")[[1]])
is.null(strsplit(plant_data[plant_line],"\\s+")[[1]][1])
strsplit(plant_data[plant_line],"\\s+")[[1]]
strsplit(plant_data[plant_line],"\\S+")[[1]]
strsplit(plant_data[plant_line],"\\s+")[[1]]
strsplit(plant_data[plant_line],"/\s+/g")[[1]]
strsplit(plant_data[plant_line],"(?U)\\s+")[[1]]
strsplit(plant_data[plant_line],"(\\S+)\\s+(.*)")[[1]]
strsplit(plant_data[plant_line],"(\\S+)\\s+(.*)")
strsplit(plant_data[plant_line],"\\s+(.*)")[[1]]
strsplit(plant_data[plant_line],"\\s+*")[[1]]
strsplit(plant_data[plant_line],"\\s+(*)")[[1]]
strsplit(plant_data[plant_line],"\\s+(.*)")[[1]]
strsplit(plant_data[plant_line],"\\s+")[[1]][2]
strsplit(plant_data[plant_line],"\\s+")[[1]]
strsplit(plant_data[plant_line],"\\s+")[[1]][2]
crop = "TUBG"
model_dir = "C:/model"
model_dir = "C:/model"
plant_data = readLines(paste0(model_dir, "/plant.DAT"))
plant_list = strsplit(plant_data, " ")
plant_list
plant_line = (1:length(plant_list))[unlist(lapply(plant_list, function(x){any(x==crop)}))]
plant_line
plant_data[plant_line]
strsplit(" 148  TUBG   6", "\\s+")
strsplit(" 148  TUBG   6", " \t\n\r\v\f")
strsplit(" 148  TUBG   6", "\t")
?gsub
gsub(" 148  TUBG   6"," ")
gsub(" "," 148  TUBG   6")
gsub(" ",x=" 148  TUBG   6")
gsub(" ",x=" 148  TUBG   6", "cc")
gsub(" ",x=" 148  TUBG   6", ",")
strsplit((gsub(" ",x=" 148  TUBG   6", ",")),",")
gsub(" ",x=" 148  TUBG   6", "")
(strsplit(plant_data[plant_line],"\\s+")[[1]][2])
ICNUM = as.numeric(strsplit(plant_data[plant_line],"\\s+")[[1]][2])
ICNUM
crop = "AGRL"
plant_data = readLines(paste0(model_dir, "/plant.DAT"))
plant_list = strsplit(plant_data, " ")
plant_line = (1:length(plant_list))[unlist(lapply(plant_list, function(x){any(x==crop)}))]
plant_data[plant_line]
ICNUM = as.numeric(strsplit(plant_data[plant_line],"\\s+")[[1]][2])
ICNUM
strsplit(plant_data[plant_line],"\\s+")[[1]][3]
CPNM
CPNM = strsplit(plant_data[plant_line],"\\s+")[[1]][3]
CPNM
IDC = as.numeric(strsplit(plant_data[plant_line],"\\s+")[[1]][4])
IDC
as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][1])
strsplit(plant_data[plant_line+1],"\\s+")[[1]]
as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][2])
as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][3])
HVSTI = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][3])
as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][4])
FRGRW1 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][5])
FRGRW1
LAIMX1 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][6])
LAIMX1 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][6])
LAIMX1
FRGRW2 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][7])
as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][1])
as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][2])
as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][6])
as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][2])
BIO_LEAF = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][2])
BIO_LEAF
as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][3])
as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][8])
as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][7])
as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][6])
as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][2])
as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][3])
as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][4])
as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][5])
as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][6])
as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][7])
?installSWATmodel
get_crop_par = function(crop,model_dir){
plant_data = readLines(paste0(model_dir, "/plant.DAT"))
plant_list = strsplit(plant_data, " ")
plant_line = (1:length(plant_list))[unlist(lapply(plant_list, function(x){any(x==crop)}))]
out = data.frame(
ICNUM = as.numeric(strsplit(plant_data[plant_line],"\\s+")[[1]][2]),
CPNM = strsplit(plant_data[plant_line],"\\s+")[[1]][3],
IDC = as.numeric(strsplit(plant_data[plant_line],"\\s+")[[1]][4]),
BIO_E = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][2]),
HVSTI = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][3]),
BLAI = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][4]),
FRGRW1 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][5]),
LAIMX1 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][6]),
FRGRW2 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][7]),
LAIMX2 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][8]),
DLAI = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][9]),
CHTMX = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][10]),
RDMX = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][11]),
T_OPT = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][2]),
T_BASE = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][3]),
CNYLD = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][4]),
CPYLD = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][5]),
PLTNFR_1 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][6]),
PLTNFR_2 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][7]),
PLTNFR_3 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][8]),
PLTPFR_1 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][9]),
PLTPFR_2 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][10]),
PLTPFR_3 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][11]),
WSYF = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][2]),
USLE_C = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][3]),
GSI = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][4]),
VPDFR = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][5]),
FRGMAX = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][6]),
WAVP = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][7]),
CO2HI = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][8]),
BIOEHI = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][9]),
RSDCO_PL = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][10]),
ALAI_MIN = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][11]),
BIO_LEAF = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][2]),
MAT_YRS = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][3]),
BMX_TREES = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][4]),
EXT_COEF = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][5]),
BMDIEOFF = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][6]))
RSR1C = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][7])
RSR2C = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][8])
return(out)
}
model_dir
get_crop_par(crop="SOYB",model_dir = model_dir)
get_crop_par(crop="SOYB",model_dir = "C:/model")
get_crop_par = function(crop,model_dir){
plant_data = readLines(paste0(model_dir, "/plant.DAT"))
plant_list = strsplit(plant_data, " ")
plant_line = (1:length(plant_list))[unlist(lapply(plant_list, function(x){any(x==crop)}))]
out = data.frame(
ICNUM = as.numeric(strsplit(plant_data[plant_line],"\\s+")[[1]][2]),
CPNM = strsplit(plant_data[plant_line],"\\s+")[[1]][3],
IDC = as.numeric(strsplit(plant_data[plant_line],"\\s+")[[1]][4]),
BIO_E = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][2]),
HVSTI = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][3]),
BLAI = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][4]),
FRGRW1 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][5]),
LAIMX1 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][6]),
FRGRW2 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][7]),
LAIMX2 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][8]),
DLAI = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][9]),
CHTMX = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][10]),
RDMX = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][11]),
T_OPT = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][2]),
T_BASE = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][3]),
CNYLD = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][4]),
CPYLD = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][5]),
PLTNFR_1 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][6]),
PLTNFR_2 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][7]),
PLTNFR_3 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][8]),
PLTPFR_1 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][9]),
PLTPFR_2 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][10]),
PLTPFR_3 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][11]),
WSYF = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][2]),
USLE_C = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][3]),
GSI = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][4]),
VPDFR = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][5]),
FRGMAX = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][6]),
WAVP = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][7]),
CO2HI = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][8]),
BIOEHI = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][9]),
RSDCO_PL = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][10]),
ALAI_MIN = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][11]),
BIO_LEAF = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][2]),
MAT_YRS = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][3]),
BMX_TREES = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][4]),
EXT_COEF = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][5]),
BMDIEOFF = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][6]),
RSR1C = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][7]),
RSR2C = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][8]))
return(out)
}
get_crop_par(crop="SOYB",model_dir = "C:/model")
get_crop_par = function(crop,model_dir){
plant_data = readLines(paste0(model_dir, "/plant.DAT"))
plant_list = strsplit(plant_data, " ")
plant_line = (1:length(plant_list))[unlist(lapply(plant_list, function(x){any(x==crop)}))]
out = data.frame(
ICNUM = as.numeric(strsplit(plant_data[plant_line],"\\s+")[[1]][2]),
CPNM = strsplit(plant_data[plant_line],"\\s+")[[1]][3],
IDC = as.numeric(strsplit(plant_data[plant_line],"\\s+")[[1]][4]),
BIO_E = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][2]),
HVSTI = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][3]),
BLAI = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][4]),
FRGRW1 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][5]),
LAIMX1 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][6]),
FRGRW2 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][7]),
LAIMX2 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][8]),
DLAI = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][9]),
CHTMX = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][10]),
RDMX = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][11]),
T_OPT = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][2]),
T_BASE = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][3]),
CNYLD = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][4]),
CPYLD = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][5]),
PLTNFR_1 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][6]),
PLTNFR_2 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][7]),
PLTNFR_3 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][8]),
PLTPFR_1 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][9]),
PLTPFR_2 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][10]),
PLTPFR_3 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][11]),
WSYF = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][2]),
USLE_C = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][3]),
GSI = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][4]),
VPDFR = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][5]),
FRGMAX = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][6]),
WAVP = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][7]),
CO2HI = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][8]),
BIOEHI = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][9]),
RSDCO_PL = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][10]),
ALAI_MIN = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][11]),
BIO_LEAF = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][2]),
MAT_YRS = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][3]),
BMX_TREES = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][4]),
EXT_COEF = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][5]),
BMDIEOFF = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][6]),
RSR1C = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][7]),
RSR2C = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][8]))
return(out)
}
get_crop_par(crop="SOYB",model_dir = "C:/model")
t(get_crop_par(crop="SOYB",model_dir = "C:/model"))
data.frame(t(get_crop_par(crop="SOYB",model_dir = "C:/model")))
t(get_crop_par(crop="SOYB",model_dir = "C:/model"))
get_crop_par(crop="SOYB",model_dir = "C:/model")
get_crop_par = function(crop,model_dir){
plant_data = readLines(paste0(model_dir, "/plant.DAT"))
plant_list = strsplit(plant_data, " ")
plant_line = (1:length(plant_list))[unlist(lapply(plant_list, function(x){any(x==crop)}))]
out = data.frame(
ICNUM = as.numeric(strsplit(plant_data[plant_line],"\\s+")[[1]][2]),
CPNM = strsplit(plant_data[plant_line],"\\s+")[[1]][3],
IDC = as.numeric(strsplit(plant_data[plant_line],"\\s+")[[1]][4]),
BIO_E = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][2]),
HVSTI = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][3]),
BLAI = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][4]),
FRGRW1 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][5]),
LAIMX1 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][6]),
FRGRW2 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][7]),
LAIMX2 = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][8]),
DLAI = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][9]),
CHTMX = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][10]),
RDMX = as.numeric(strsplit(plant_data[plant_line+1],"\\s+")[[1]][11]),
T_OPT = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][2]),
T_BASE = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][3]),
CNYLD = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][4]),
CPYLD = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][5]),
PLTNFR_1 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][6]),
PLTNFR_2 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][7]),
PLTNFR_3 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][8]),
PLTPFR_1 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][9]),
PLTPFR_2 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][10]),
PLTPFR_3 = as.numeric(strsplit(plant_data[plant_line+2],"\\s+")[[1]][11]),
WSYF = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][2]),
USLE_C = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][3]),
GSI = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][4]),
VPDFR = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][5]),
FRGMAX = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][6]),
WAVP = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][7]),
CO2HI = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][8]),
BIOEHI = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][9]),
RSDCO_PL = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][10]),
ALAI_MIN = as.numeric(strsplit(plant_data[plant_line+3],"\\s+")[[1]][11]),
BIO_LEAF = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][2]),
MAT_YRS = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][3]),
BMX_TREES = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][4]),
EXT_COEF = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][5]),
BMDIEOFF = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][6]),
RSR1C = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][7]),
RSR2C = as.numeric(strsplit(plant_data[plant_line+4],"\\s+")[[1]][8]))
return(out)
}
get_crop_par(crop="SOYB",model_dir = "C:/model")
devtools::document()
rm(list = c("get_crop_par"))
devtools::document()
use_package_doc()
library(devtools)
use_package_doc()
use_tibble()
devtools::document()
devtools::install()
use_r("get_crop_par")
devtools::document()
use_package_doc()
use_package_doc()
devtools::document()
devtools::install()
devtools::document()
use_package_doc()
use_tibble()
devtools::document()
devtools::install()
use_r("get_crop_par")
devtools::document()
use_package_doc()
use_package_doc()
use_tibble()
devtools::document()
devtools::install()
